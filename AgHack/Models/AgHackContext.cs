// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AgHack.Models;

public partial class AgHackContext : DbContext
{
    public AgHackContext()
    {
    }

    public AgHackContext(DbContextOptions<AgHackContext> options)
        : base(options)
    {
    }

    public virtual DbSet<IWQ_Dept> IWQ_Depts { get; set; }

    public virtual DbSet<IWQ_MP> IWQ_MPs { get; set; }

    public virtual DbSet<IWQ_Record> IWQ_Records { get; set; }

    public virtual DbSet<IWQ_St> IWQ_Sts { get; set; }

    public virtual DbSet<Ref_Basin> Ref_Basins { get; set; }

    public virtual DbSet<Ref_County> Ref_Counties { get; set; }

    public virtual DbSet<Ref_River> Ref_Rivers { get; set; }

    public virtual DbSet<Ref_Town> Ref_Towns { get; set; }

    public virtual DbSet<UG_Item> UG_Items { get; set; }

    public virtual DbSet<UG_ItemCategory> UG_ItemCategories { get; set; }

    public virtual DbSet<UG_Record> UG_Records { get; set; }

    public virtual DbSet<UG_St> UG_Sts { get; set; }

    public virtual DbSet<WQ_Item> WQ_Items { get; set; }

    public virtual DbSet<WQ_ItemCategory> WQ_ItemCategories { get; set; }

    public virtual DbSet<WQ_Record> WQ_Records { get; set; }

    public virtual DbSet<WQ_St> WQ_Sts { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=127.0.0.1,1433;Initial Catalog=AgHack;User ID=sa;Password=YourStrong!Passw0rd");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<IWQ_Dept>(entity =>
        {
            entity.HasKey(e => e.DeptId).HasName("PK__IWQ_Dept__014881AEAC9B1D72");

            entity.ToTable("IWQ_Dept");

            entity.Property(e => e.DeptName)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<IWQ_MP>(entity =>
        {
            entity.HasKey(e => e.MPId).HasName("PK__IWQ_MP__6FF536B8E317DC26");

            entity.ToTable("IWQ_MP");

            entity.Property(e => e.MPName)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Dept).WithMany(p => p.IWQ_MPs)
                .HasForeignKey(d => d.DeptId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IWQ_MP_IWQ_Dept");

            entity.HasOne(d => d.St).WithMany(p => p.IWQ_MPs)
                .HasForeignKey(d => d.StId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__IWQ_MP__StId__7F2BE32F");
        });

        modelBuilder.Entity<IWQ_Record>(entity =>
        {
            entity.HasKey(e => e.RecordId).HasName("PK__IWQ_Reco__FBDF78E976E2B34F");

            entity.ToTable("IWQ_Record");

            entity.Property(e => e.EC).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.Note).HasMaxLength(100);
            entity.Property(e => e.PH).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.SampleDate).HasColumnType("datetime");
            entity.Property(e => e.Temp).HasColumnType("decimal(6, 2)");

            entity.HasOne(d => d.MP).WithMany(p => p.IWQ_Records)
                .HasForeignKey(d => d.MPId)
                .HasConstraintName("FK__IWQ_Record__MPId__02084FDA");
        });

        modelBuilder.Entity<IWQ_St>(entity =>
        {
            entity.HasKey(e => e.StId).HasName("PK__IWQ_St__C33CEFC2E9B64D1F");

            entity.ToTable("IWQ_St");

            entity.Property(e => e.SiteAddress).HasMaxLength(50);
            entity.Property(e => e.StName)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.TWD97Lat).HasColumnType("decimal(12, 8)");
            entity.Property(e => e.TWD97Lon).HasColumnType("decimal(12, 8)");

            entity.HasOne(d => d.County).WithMany(p => p.IWQ_Sts)
                .HasForeignKey(d => d.CountyId)
                .HasConstraintName("FK_IWQ_St_Ref_County");

            entity.HasOne(d => d.Dept).WithMany(p => p.IWQ_Sts)
                .HasForeignKey(d => d.DeptId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__IWQ_St__DeptId__7C4F7684");

            entity.HasOne(d => d.Town).WithMany(p => p.IWQ_Sts)
                .HasForeignKey(d => d.TownId)
                .HasConstraintName("FK_IWQ_St_Ref_Town");
        });

        modelBuilder.Entity<Ref_Basin>(entity =>
        {
            entity.HasKey(e => e.BasinId);

            entity.ToTable("Ref_Basin");

            entity.Property(e => e.BasinCode).HasMaxLength(10);
            entity.Property(e => e.BasinName)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Ref_County>(entity =>
        {
            entity.HasKey(e => e.CountyId).HasName("PK_Ref_county");

            entity.ToTable("Ref_County");

            entity.Property(e => e.CountyCode)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.CountyName)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Ref_River>(entity =>
        {
            entity.HasKey(e => e.RiverId);

            entity.ToTable("Ref_River");

            entity.Property(e => e.Description).HasMaxLength(200);
            entity.Property(e => e.RiverCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.RiverEngName)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.RiverName)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Ref_Town>(entity =>
        {
            entity.HasKey(e => e.TownId);

            entity.ToTable("Ref_Town");

            entity.Property(e => e.TownCode).HasMaxLength(10);
            entity.Property(e => e.TownName)
                .IsRequired()
                .HasMaxLength(20);

            entity.HasOne(d => d.County).WithMany(p => p.Ref_Towns)
                .HasForeignKey(d => d.CountyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ref_Town_Ref_County");
        });

        modelBuilder.Entity<UG_Item>(entity =>
        {
            entity.HasKey(e => e.ItemId).HasName("PK__UG_Item__727E838B6124B1DF");

            entity.ToTable("UG_Item");

            entity.Property(e => e.ItemEngName).HasMaxLength(30);
            entity.Property(e => e.ItemEngabbreviation).HasMaxLength(20);
            entity.Property(e => e.ItemName)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.ItemUnit).HasMaxLength(20);

            entity.HasOne(d => d.ItemCategory).WithMany(p => p.UG_Items)
                .HasForeignKey(d => d.ItemCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UG_Item_UG_ItemCategory");
        });

        modelBuilder.Entity<UG_ItemCategory>(entity =>
        {
            entity.HasKey(e => e.ItemCategoryId).HasName("PK__UG_ItemC__C24A2925D5E80468");

            entity.ToTable("UG_ItemCategory");

            entity.Property(e => e.ItemCategoryEngName).HasMaxLength(50);
            entity.Property(e => e.ItemCategoryName)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<UG_Record>(entity =>
        {
            entity.HasKey(e => e.RecordId).HasName("PK__UG_Recor__FBDF78E9549CE157");

            entity.ToTable("UG_Record");

            entity.Property(e => e.ItemValue).HasMaxLength(10);
            entity.Property(e => e.ItemValue_Num).HasColumnType("decimal(20, 8)");
            entity.Property(e => e.Note).HasMaxLength(100);
            entity.Property(e => e.SampleDate).HasColumnType("datetime");

            entity.HasOne(d => d.Item).WithMany(p => p.UG_Records)
                .HasForeignKey(d => d.ItemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UG_Record__ItemI__6FE99F9F");

            entity.HasOne(d => d.St).WithMany(p => p.UG_Records)
                .HasForeignKey(d => d.StId)
                .HasConstraintName("FK_UG_Record_UG_St");
        });

        modelBuilder.Entity<UG_St>(entity =>
        {
            entity.HasKey(e => e.StId).HasName("PK__UG_St__C33CEFC28D2322D7");

            entity.ToTable("UG_St");

            entity.Property(e => e.SiteAddress).HasMaxLength(50);
            entity.Property(e => e.SiteEngName).HasMaxLength(150);
            entity.Property(e => e.SiteId)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.SiteName)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.TWD97Lat).HasColumnType("decimal(12, 8)");
            entity.Property(e => e.TWD97Lon).HasColumnType("decimal(12, 8)");
            entity.Property(e => e.TWD97TM2X).HasColumnType("decimal(20, 8)");
            entity.Property(e => e.TWD97TM2Y).HasColumnType("decimal(20, 8)");
            entity.Property(e => e.UGWDistName).HasMaxLength(20);

            entity.HasOne(d => d.County).WithMany(p => p.UG_Sts)
                .HasForeignKey(d => d.CountyId)
                .HasConstraintName("FK__UG_St__CountyId__68487DD7");

            entity.HasOne(d => d.Town).WithMany(p => p.UG_Sts)
                .HasForeignKey(d => d.TownId)
                .HasConstraintName("FK__UG_St__TownId__693CA210");
        });

        modelBuilder.Entity<WQ_Item>(entity =>
        {
            entity.HasKey(e => e.ItemId).HasName("PK__WQ_Item__727E838B4E56E0FF");

            entity.ToTable("WQ_Item");

            entity.Property(e => e.ItemEngName).HasMaxLength(30);
            entity.Property(e => e.ItemEngabbreviation).HasMaxLength(10);
            entity.Property(e => e.ItemName)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.ItemUnit).HasMaxLength(10);

            entity.HasOne(d => d.ItemCategory).WithMany(p => p.WQ_Items)
                .HasForeignKey(d => d.ItemCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WQ_Item_WQ_ItemCategory");
        });

        modelBuilder.Entity<WQ_ItemCategory>(entity =>
        {
            entity.HasKey(e => e.ItemCategoryId).HasName("PK__WQ_ItemC__C24A2925AFC167DB");

            entity.ToTable("WQ_ItemCategory");

            entity.Property(e => e.ItemCategoryEngName).HasMaxLength(50);
            entity.Property(e => e.ItemCategoryName)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<WQ_Record>(entity =>
        {
            entity.HasKey(e => e.RecordId).HasName("PK__WQ_Recor__FBDF78E9E02BE6C1");

            entity.ToTable("WQ_Record");

            entity.Property(e => e.ItemValue).HasMaxLength(10);
            entity.Property(e => e.ItemValue_Num).HasColumnType("decimal(20, 8)");
            entity.Property(e => e.Note).HasMaxLength(100);
            entity.Property(e => e.SampleDate).HasColumnType("datetime");

            entity.HasOne(d => d.Item).WithMany(p => p.WQ_Records)
                .HasForeignKey(d => d.ItemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WQ_Record__ItemI__656C112C");

            entity.HasOne(d => d.St).WithMany(p => p.WQ_Records)
                .HasForeignKey(d => d.StId)
                .HasConstraintName("FK_WQ_Record_WQ_St");
        });

        modelBuilder.Entity<WQ_St>(entity =>
        {
            entity.HasKey(e => e.StId).HasName("PK__WQ_St__C33CEFC21823DC79");

            entity.ToTable("WQ_St");

            entity.Property(e => e.River).HasMaxLength(10);
            entity.Property(e => e.SiteAddress).HasMaxLength(50);
            entity.Property(e => e.SiteEngName).HasMaxLength(50);
            entity.Property(e => e.SiteId)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.SiteName)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.TWD97Lat).HasColumnType("decimal(12, 8)");
            entity.Property(e => e.TWD97Lon).HasColumnType("decimal(12, 8)");
            entity.Property(e => e.TWD97TM2X).HasColumnType("decimal(20, 8)");
            entity.Property(e => e.TWD97TM2Y).HasColumnType("decimal(20, 8)");

            entity.HasOne(d => d.Basin).WithMany(p => p.WQ_Sts)
                .HasForeignKey(d => d.BasinId)
                .HasConstraintName("FK__WQ_St__BasinId__5EBF139D");

            entity.HasOne(d => d.County).WithMany(p => p.WQ_Sts)
                .HasForeignKey(d => d.CountyId)
                .HasConstraintName("FK__WQ_St__CountyId__5CD6CB2B");

            entity.HasOne(d => d.Town).WithMany(p => p.WQ_Sts)
                .HasForeignKey(d => d.TownId)
                .HasConstraintName("FK__WQ_St__TownId__5DCAEF64");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}